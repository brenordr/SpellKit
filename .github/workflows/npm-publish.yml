name: Build & Publish

on:
  push:
    branches:
      - develop
      - main
      - "rc/*"
  release:
    types:
      - created

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Test
        run: npm test
      - name: Build Package
        run: bun run build

  Publish:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Build Package
        run: bun run build
      - name: Install jq
        run: sudo apt-get install jq
      - name: Get Latest GitHub release version
        id: latest_version
        run: |
          latest_version=$(curl --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" | jq -r .tag_name)
          echo "LATEST_VERSION=${latest_version#v}" >> $GITHUB_ENV
      - name: Publish Develop Branch to NPM
        if: github.ref == 'refs/heads/develop'
        run: |
          git_hash=$(git rev-parse --short HEAD)
          base_version=${{ env.LATEST_VERSION }}
          npm version "$base_version-dev.$git_hash" --no-git-tag-version
          npm publish --tag dev
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: Publish Main Branch to NPM
        if: github.ref == 'refs/heads/main'
        run: |
          git_hash=$(git rev-parse --short HEAD)
          npm version prerelease --preid="next-${git_hash}" --no-git-tag-version
          npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: Publish RC Branch to NPM
        if: startsWith(github.ref, 'refs/heads/rc/')
        run: |
          git_hash=$(git rev-parse --short HEAD)
          npm version prerelease --preid="rc-${git_hash}" --no-git-tag-version
          npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: Publish Release to NPM
        if: github.event_name == 'release'
        run: |
          clean_version=${GITHUB_REF#refs/tags/v}  # Remove the leading 'v'
          npm version $clean_version --no-git-tag-version
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
